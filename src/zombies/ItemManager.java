/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package zombies;

import javax.swing.DefaultListModel;

/**
 *
 * @author Leo
 */
public class ItemManager extends javax.swing.JPanel {

    /**
     * Creates new form ItemManager
     */
    
    private String myString = "";
    private ItemList itemList;
    private final ItemManagerResponseIntf responseHandler;
    
    public ItemManager(String name, ItemList itemList, ItemManagerResponseIntf responseHandler) {
        initComponents();
        this.setItemList(itemList);
        this.responseHandler = responseHandler;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jLstItems = new javax.swing.JList();
        jbtnSELECT = new javax.swing.JButton();

        jLstItems.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jLstItems);

        jbtnSELECT.setText("Select");
        jbtnSELECT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbtnSELECTMouseClicked(evt);
            }
        });
        jbtnSELECT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSELECTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtnSELECT)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(97, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbtnSELECT)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnSELECTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSELECTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbtnSELECTActionPerformed

    private void jbtnSELECTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnSELECTMouseClicked
        
    }//GEN-LAST:event_jbtnSELECTMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList jLstItems;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtnSELECT;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the itemList
     */
    public ItemList getItemList() {
        return itemList;
    }

    /**
     * @param itemList the itemList to set
     */
    public void setItemList(ItemList itemList) {
        this.itemList = itemList;
        //update the interface
        
        jLstItems.removeAll();
        if(itemList != null){
            DefaultListModel listModel = new DefaultListModel();
            
            for (Item item :itemList.getItems()) {
                
                listModel.addElement(item.getDisplay());
                
            }
            this.jLstItems.setModel(listModel);
        }
    }
}
